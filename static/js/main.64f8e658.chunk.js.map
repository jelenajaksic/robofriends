{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","robot","name","email","id","className","src","alt","CardList","robots","cardComponent","map","user","ind","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflow","height","children","ErrorBoundry","state","hasError","error","errorInfo","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAYeA,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCQCQ,G,MAbF,SAACC,GAAW,IAAD,EACQA,EAAMC,MAA1BC,EADY,EACZA,KAAMC,EADM,EACNA,MAAOC,EADD,EACCA,GACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,UACzD,gCACI,6BAAML,IACN,4BAAKC,YCKNK,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OAAO,cAAC,EAAD,CAAgBZ,MAAOQ,EAAOI,IAAnBA,MAEtB,OACI,8BACKH,KCMEI,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKV,UAAW,MAAhB,SACI,uBACIA,UAAU,kCACVW,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCCZI,EARA,SAACnB,GACZ,OACI,qBAAKoB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,SAA1C,SACMtB,EAAMuB,YCmBLC,E,kDArBX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CACVJ,UAAU,M,+BAKd,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAK7B,MAAMuB,a,GAlBCQ,aC+CZC,E,kDAzCX,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IAaViC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVK,YAAaD,EAAME,OAAOC,SAd9B,EAAKZ,MAAQ,CACThB,OAAQ,GACR0B,YAAa,IAJF,E,gEAQE,IAAD,OAChBG,MAAO,8CACF7C,MAAK,SAAA8C,GAAQ,OAAIA,EAASC,UAC1B/C,MAAK,SAAAgD,GAAK,OAAI,EAAKX,SAAS,CAAErB,OAAQgC,S,+BASpC,IAAD,EAC0BZ,KAAKJ,MAA7BhB,EADF,EACEA,OAAQ0B,EADV,EACUA,YACVO,EAAiBjC,EAAOkC,QAAO,SAAA1C,GACjC,OAAOA,EAAMC,KAAK0C,cAAcC,SAASV,EAAYS,kBAEzD,OAAQnC,EAAOqC,OAGP,sBAAKzC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAec,KAAKI,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAASiC,WAPlC,6C,GA3BKX,aCAlBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.64f8e658.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = (props) => {\n    const { name, email, id } = props.robot;\n    return (\n        <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\n            <img src={`https://robohash.org/${id}?size=200x200`} alt='Robot'/>\n            <div>\n                <h2>{ name }</h2>\n                <p>{ email }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n    const cardComponent = robots.map((user, ind) => {\n        return <Card key={ind} robot={robots[ind]}/>\n    })\n    return (\n        <div>\n            {cardComponent}\n        </div>\n    )\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className={'pa2'}>\n            <input\n                className='pa3 ba b--none bg-lightest-blue'\n                type='search'\n                placeholder='search robots'\n                onChange={ searchChange }\n            />\n        </div>\n    )\n}\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflow: 'scroll', height: '800px' }}>\n            { props.children }\n        </div>\n    )\n}\n\nexport default Scroll;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            hasError: true\n        })\n    }\n\n    render () {\n        if (this.state.hasError) {\n            return <h1>Oops, that is not good!</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport './app.scss'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            robots: [],\n            searchField: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch ('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }))\n    }\n\n    onSearchChange = (event) => {\n        this.setState({\n            searchField: event.target.value\n        })\n    }\n\n    render () {\n        const { robots, searchField } = this.state\n        const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        })\n        return !robots.length ?\n             <h1>Loading</h1> :\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboFriends</h1>\n                    <SearchBox searchChange={ this.onSearchChange } />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={ filteredRobots } />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n            )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}